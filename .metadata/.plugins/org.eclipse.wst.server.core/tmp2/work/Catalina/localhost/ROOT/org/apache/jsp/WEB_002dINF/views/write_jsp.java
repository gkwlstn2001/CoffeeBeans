/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-10-12 14:59:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1569743003710L));
    _jspx_dependants.put("jar:file:/F:/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/CoffeeBeans/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("\r\n");
      out.write("<!-- Title -->\r\n");
      out.write("<title>글작성 페이지(Write)</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Favicon -->\r\n");
      out.write("<link rel=\"icon\" href=\"resources/img/core-img/abc.ico\">\r\n");
      out.write("\r\n");
      out.write("<!-- Stylesheet -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/ddd.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".wrapper {\r\n");
      out.write("\tbackground-color: #ffd699;\r\n");
      out.write("\tbackground-size: cover;\r\n");
      out.write("\tborder: 5px solid black;\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("\theight: 90%;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writer {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writer1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Title {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Title1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Content {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Content1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".fileupload {\r\n");
      out.write("\tmargin-left: 34%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writeboard {\r\n");
      out.write("\tmargin-top: 50px;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".b {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".c {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".d {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".e {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".picture {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("}\r\n");
      out.write("#map {\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\tborder: 2px solid brown;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#mapname {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write(".mapinfo {\r\n");
      out.write("\tdisplay:none;\r\n");
      out.write("}\r\n");
      out.write(".f {\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\tdisplay:none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/includes/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<br />\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- ##### Search Area Start ##### -->\r\n");
      out.write("\t\t<form action=\"writeok\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t<div class=\"bueno-search-area section-padding-100-0 pb-70 bg-img\"\r\n");
      out.write("\t\t\t\tstyle=\"background-image: url(resources/img/core-img/pattern01.png);\">\r\n");
      out.write("\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-12 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" id=\"vegan\" name=\"ADMIN\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"NORMAL\" name=\"NORMAL\" selected>일반</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-12 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group mb-30\" id=\"select\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" id=\"recipe\" name=\"REGION\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"시 / 도\" name=\"categoryregion\">시 / 도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"서울\" name=\"seoul\">서울특별시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"부산\" name=\"busan\">부산광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"대구\" name=\"daegu\">대구광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"인천광역시\" name=\"incheon\">인천광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"광주광역시\" name=\"gwangju\">광주광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"대전광역시\" name=\"daejeon\">대전광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"울산광역시\" name=\"ulsan\">울산광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"세종특별자치시\" name=\"sejong\">세종특별자치시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"경기도\" name=\"gyunggido\">경기도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"강원도\" name=\"gangwondo\">강원도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"충청북도\" name=\"choogchungbukdo\">충청북도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"충청남도\" name=\"choogchungnamdo\">충청남도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"전라북도\" name=\"jeonlabukdo\">전라북도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"전라남도\" name=\"jeonlanamdo\">전라남도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"경상북도\" name=\"gyeongsangbukdo\">경상북도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"경상남도\" name=\"gyeongsangnamdo\">경상남도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"제주특별자치도\" name=\"jeju\">제주특별자치도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-12 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" id=\"vegan\" name=\"SCORE\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"categoryscore\" name=\"categoryscore\">평점\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t(☆☆☆☆☆)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"5점 (★★★★★)\" name=\"five\">5점 (★★★★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"4점 (★★★★)\" name=\"four\">4점 (★★★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"3점 (★★★)\" name=\"three\">3점 (★★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"2점 (★★)\" name=\"two\">2점 (★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"1점 (★)\" name=\"one\">1점 (★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- ##### Search Area End ##### -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"writeboard\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"d\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"e\" rows=\"1\" cols=\"80\" name=\"WRITEDATE\" readonly>작성일자</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"d\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"e\" rows=\"1\" cols=\"80\" name=\"VIEWSCOUNT\" readonly>조회수</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"writer\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"writer1\" rows=\"1\" cols=\"80\" name=\"EMAIL\" readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${SessionEMAIL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"Title\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"Title1\" rows=\"2\" cols=\"80\" name=\"TITLE\">[제목]\r\n");
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"Content\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"Content1\" rows=\"20\" cols=\"80\" name=\"CONTENT\">[기본 글양식]\r\n");
      out.write("주차시설 : \r\n");
      out.write("맛 : \r\n");
      out.write("분위기 : \r\n");
      out.write("서비스 : \r\n");
      out.write("인테리어 :\r\n");
      out.write("\r\n");
      out.write("[내용]\r\n");
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<script src=\"resources/js/jquery/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("\t\t\t<div id=\"map\" style=\"width: 70%; height: 300px;\"></div>\r\n");
      out.write("\t\t\t<p class=\"mapinfo\"><em>지도를 클릭해주세요!</em></p>\r\n");
      out.write("\t\t\t<div class=\"mapinfo\" id=\"clickLatlng\" name=\"mapinformation\"></div>\r\n");
      out.write("\t\t\t<input type=\"text\" value=\"\" name=\"LATITUDE\" id=\"mapinput\" class=\"f\">\r\n");
      out.write("\t\t\t<input type=\"text\" value=\"\" name=\"LONGITUDE\" id=\"mapinput2\" class=\"f\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\"\r\n");
      out.write("\t\t\t\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=2ee6c92474dfdeb528b57f280e472ffc\"></script>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\tvar mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("\t\t\t\tmapOption = {\r\n");
      out.write("\t\t\t\t\tcenter : new kakao.maps.LatLng(36.351213, 127.454311), // 지도의 중심좌표\r\n");
      out.write("\t\t\t\t\tlevel : 13\r\n");
      out.write("\t\t\t\t// 지도의 확대 레벨\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다\r\n");
      out.write("\t\t\t\tvar map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\r\n");
      out.write("\t\t\t\tvar mapTypeControl = new kakao.maps.MapTypeControl();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도에 컨트롤을 추가해야 지도위에 표시됩니다\r\n");
      out.write("\t\t\t\t// kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\r\n");
      out.write("\t\t\t\tmap.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\r\n");
      out.write("\t\t\t\tvar zoomControl = new kakao.maps.ZoomControl();\r\n");
      out.write("\t\t\t\tmap.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 지도를 클릭한 위치에 표출할 마커입니다\r\n");
      out.write("\t\t\t\tvar marker = new kakao.maps.Marker({ \r\n");
      out.write("\t\t\t\t    // 지도 중심좌표에 마커를 생성합니다 \r\n");
      out.write("\t\t\t\t    position: map.getCenter() \r\n");
      out.write("\t\t\t\t}); \r\n");
      out.write("\t\t\t\t// 지도에 마커를 표시합니다\r\n");
      out.write("\t\t\t\tmarker.setMap(map);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar iwContent = '<div style=\"padding:5px;\"><a href=\"https://map.kakao.com/link/map/Hello World!,36.351213, 127.454311\" style=\"color:blue\" target=\"_blank\">큰지도보기/</a> <a href=\"https://map.kakao.com/link/to/Hello World!,36.351213, 127.454311\" style=\"color:blue\" target=\"_blank\">길찾기</a></div>', \r\n");
      out.write("\t\t\t\t// 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n");
      out.write("\t\t\t\tiwPosition = new kakao.maps.LatLng(36.351213, 127.454311); //인포윈도우 표시 위치입니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 인포윈도우를 생성합니다\r\n");
      out.write("\t\t\t\tvar infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t\t\t\t    position : iwPosition, \r\n");
      out.write("\t\t\t\t    content : iwContent \r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t// 마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다\r\n");
      out.write("\t\t\t\tinfowindow.open(map, marker);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도에 클릭 이벤트를 등록합니다\r\n");
      out.write("\t\t\t\t// 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다\r\n");
      out.write("\t\t\t\tkakao.maps.event.addListener(map, 'click', function(mouseEvent) {        \r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t    // 클릭한 위도, 경도 정보를 가져옵니다\r\n");
      out.write("\t\t\t\t    var latlng = mouseEvent.latLng; \r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t    // 마커 위치를 클릭한 위치로 옮깁니다\r\n");
      out.write("\t\t\t\t    marker.setPosition(latlng);\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t    var message = '클릭한 위치의 위도는 ' + latlng.getLat() + ' 이고, ';\r\n");
      out.write("\t\t\t\t    message += '경도는 ' + latlng.getLng() + ' 입니다';\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t    var latitude = latlng.getLat();\r\n");
      out.write("\t\t\t\t    var longitutde = latlng.getLng();\r\n");
      out.write("\t\t\t\t   \t\r\n");
      out.write("\t\t\t\t    var resultdiv = document.getElementById('clickLatlng');\r\n");
      out.write("\t\t\t\t    resultdiv.innerHTML = message;\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t    $('input#mapinput').val(latitude);\r\n");
      out.write("\t\t\t\t    $('input#mapinput2').val(longitutde);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"picture\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지1</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE1\" id=\"image\" required/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지2</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE2\" id=\"image2\" required/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview2\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지3</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE3\" id=\"image3\" required/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview3\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지4</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE4\" id=\"image4\" required/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview4\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<br/>\r\n");
      out.write("\t\t\t<br/>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<!-- <div class=\"col-12 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group mb-30\"> -->\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn bueno-btn w-100\">글쓰기</button>\r\n");
      out.write("\t\t\t\t\t\t<!-- </div>\r\n");
      out.write("\t\t\t\t\t</div> -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<br />\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/includes/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- ##### All Javascript Script ##### -->\r\n");
      out.write("\t<!-- jQuery-2.2.4 js -->\r\n");
      out.write("\t<script src=\"resources/js/jquery/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image2').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image2').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview2 img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview2').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview2 a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image2')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image2').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image3').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image3').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview3 img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview3').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview3 a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image3')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image3').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image4').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image4').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview4 img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview4').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview4 a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image4')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image4').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Popper js -->\r\n");
      out.write("\t<script src=\"resources/js/bootstrap/popper.min.js\"></script>\r\n");
      out.write("\t<!-- Bootstrap js -->\r\n");
      out.write("\t<script src=\"resources/js/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("\t<!-- All Plugins js -->\r\n");
      out.write("\t<script src=\"resources/js/plugins/plugins.js\"></script>\r\n");
      out.write("\t<!-- Active js -->\r\n");
      out.write("\t<script src=\"resources/js/active.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/write.jsp(141,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${SessionEMAIL=='gkwlstn2001@naver.com'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ADMINISTRATION\" name=\"ADMINISTRATION\">관리자</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
