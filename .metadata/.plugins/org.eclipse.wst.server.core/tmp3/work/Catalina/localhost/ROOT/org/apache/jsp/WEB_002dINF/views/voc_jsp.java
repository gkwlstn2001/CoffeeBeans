/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-10-10 12:34:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class voc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1566967374025L));
    _jspx_dependants.put("jar:file:/F:/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp3/wtpwebapps/CoffeeBeans/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("\r\n");
      out.write("<!-- Title -->\r\n");
      out.write("<title>고객의 소리(Voice Of Customer)</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Favicon -->\r\n");
      out.write("<link rel=\"icon\" href=\"resources/img/core-img/abc.ico\">\r\n");
      out.write("\r\n");
      out.write("<!-- Stylesheet -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/ddd.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t.a {\r\n");
      out.write("\t\tmargin:0 auto;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/includes/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- Contact Form Area -->\r\n");
      out.write("\t<div class=\"contact-form-area mb-70\" id=\"alldiv\">\r\n");
      out.write("\t\t<br/>\r\n");
      out.write("\t\t<h4 class=\"mb-50\" id=\"TITLENAME\">고객의 소리(VOC)</h4>\r\n");
      out.write("\r\n");
      out.write("\t\t<form action=\"vocwriteok\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-6\"  id=\"EMAILBOX\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"EMAIL\" class=\"form-control\" id=\"EMAIL\" name=\"EMAIL\" placeholder=\"EMAIL\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${SessionEMAIL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-6\" id=\"TITLEBOX\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\" >\r\n");
      out.write("\t\t\t\t\t\t<textarea class=\"form-control\" id=\"TITLE\" name=\"TITLE\" cols=\"1\" rows=\"1\" placeholder=\"제목\"></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-12\" id=\"CONTENTBOX\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<textarea class=\"form-control\" id=\"CONTENT\" name=\"CONTENT\" cols=\"30\" rows=\"10\" placeholder=\"내용\"></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"a\" id=\"picturebox\">\r\n");
      out.write("\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t<label for=\"image\" id=\"labeltext\">개선사항 첨부이미지</label> <br /> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"file\" name=\"VOC_FILE\" id=\"image\" required/>\r\n");
      out.write("\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t<div id=\"image_preview\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> \r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" id=\"remove\">Remove</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<button class=\"btn bueno-btn mt-30\" id=\"submitbutton\" type=\"submit\">Send</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/includes/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- ##### All Javascript Script ##### -->\r\n");
      out.write("\t<!-- jQuery-2.2.4 js -->\r\n");
      out.write("\t<script src=\"resources/js/jquery/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$('div#alldiv').css({\r\n");
      out.write("\t\t\t'margin':'0 auto',\r\n");
      out.write("\t\t\t'width':'80%',\r\n");
      out.write("\t\t\t'height':'100%',\r\n");
      out.write("\t\t\t'border':'5px solid black',\r\n");
      out.write("\t\t\t'background-color':'#956637'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('h4#TITLENAME').css({\r\n");
      out.write("\t\t\t'text-align':'center',\r\n");
      out.write("\t\t\t'color':'white'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('input#EMAIL').css({\r\n");
      out.write("\t\t\t'color':'black',\r\n");
      out.write("\t\t\t'font-weight':'bold',\r\n");
      out.write("\t\t\t'text-align':'center',\r\n");
      out.write("\t\t\t'border':'5px solid black'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('textarea#TITLE').css({\r\n");
      out.write("\t\t\t'color':'black',\r\n");
      out.write("\t\t\t'font-weight':'bold',\r\n");
      out.write("\t\t\t'text-align':'center',\r\n");
      out.write("\t\t\t'width':'90%',\r\n");
      out.write("\t\t\t'height':'50px',\r\n");
      out.write("\t\t\t'margin':'0 auto',\r\n");
      out.write("\t\t\t'border':'5px solid black'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('textarea#CONTENT').css({\r\n");
      out.write("\t\t\t'color':'black',\r\n");
      out.write("\t\t\t'font-weight':'bold',\r\n");
      out.write("\t\t\t'text-align':'center',\r\n");
      out.write("\t\t\t'width':'90%',\r\n");
      out.write("\t\t\t'margin':'0 auto',\r\n");
      out.write("\t\t\t'border':'5px solid black'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('label#labeltext').css({\r\n");
      out.write("\t\t\t'color':'white',\r\n");
      out.write("\t\t\t'font-weight':'bold'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('div#EMAILBOX').css({\r\n");
      out.write("\t\t\t'margin':'0 auto'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('div#TITLEBOX').css({\r\n");
      out.write("\t\t\t'margin':'0 auto'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('div#CONTENTBOX').css({\r\n");
      out.write("\t\t\t'width':'50%',\r\n");
      out.write("\t\t\t'margin':'0 auto'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('div#picturebox').css({\r\n");
      out.write("\t\t\t'margin':'0 auto',\r\n");
      out.write("\t\t\t'text-align':'center'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('button#submitbutton').css({\r\n");
      out.write("\t\t\t'margin':'0 auto',\r\n");
      out.write("\t\t\t'background-color':'black'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('a#remove').css({\r\n");
      out.write("\t\t\t'color':'white'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('input#image').css({\r\n");
      out.write("\t\t\t'color':'white'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Popper js -->\r\n");
      out.write("\t<script src=\"resources/js/bootstrap/popper.min.js\"></script>\r\n");
      out.write("\t<!-- Bootstrap js -->\r\n");
      out.write("\t<script src=\"resources/js/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("\t<!-- All Plugins js -->\r\n");
      out.write("\t<script src=\"resources/js/plugins/plugins.js\"></script>\r\n");
      out.write("\t<!-- Active js -->\r\n");
      out.write("\t<script src=\"resources/js/active.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
