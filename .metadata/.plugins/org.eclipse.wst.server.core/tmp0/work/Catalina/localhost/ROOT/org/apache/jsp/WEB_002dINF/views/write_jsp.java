/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-10-20 12:24:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/F:/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/CoffeeBeans/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1569743003710L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("\r\n");
      out.write("<!-- Title -->\r\n");
      out.write("<title>글작성 페이지(Write)</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Favicon -->\r\n");
      out.write("<link rel=\"icon\" href=\"resources/img/core-img/abc.ico\">\r\n");
      out.write("\r\n");
      out.write("<!-- Stylesheet -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/ddd.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".wrapper {\r\n");
      out.write("\tbackground-color: #ffd699;\r\n");
      out.write("\tbackground-size: cover;\r\n");
      out.write("\tborder: 5px solid black;\r\n");
      out.write("\twidth: 90%;\r\n");
      out.write("\theight: 90%;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writer {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writer1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Title {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Title1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Content {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Content1 {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".fileupload {\r\n");
      out.write("\tmargin-left: 34%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writeboard {\r\n");
      out.write("\tmargin-top: 50px;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".b {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".c {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".d {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".e {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 70%;\r\n");
      out.write("\theight: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".picture {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#map {\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\tborder: 3px solid #6B4928;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#mapname {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mapinfo {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".f {\r\n");
      out.write("\twidth: 1000px;\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".map_wrap, .map_wrap * {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tfont-family: 'Malgun Gothic', dotum, '돋움', sans-serif;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".map_wrap a, .map_wrap a:hover, .map_wrap a:active {\r\n");
      out.write("\tcolor: #000;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".map_wrap {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 500px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("\tmargin: 10px 0 30px 10px;\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("\toverflow-y: auto;\r\n");
      out.write("\tbackground: rgba(255, 255, 255, 0.7);\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bg_white {\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap hr {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\theight: 1px;\r\n");
      out.write("\tborder: 0;\r\n");
      out.write("\tborder-top: 2px solid #5F5F5F;\r\n");
      out.write("\tmargin: 3px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap .option {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap .option p {\r\n");
      out.write("\tmargin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#menu_wrap .option button {\r\n");
      out.write("\tmargin-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList li {\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tborder-bottom: 1px solid #888;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tmin-height: 65px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item span {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tmargin-top: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item h5, #placesList .item .info {\r\n");
      out.write("\ttext-overflow: ellipsis;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\twhite-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .info {\r\n");
      out.write("\tpadding: 10px 0 10px 55px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .info .gray {\r\n");
      out.write("\tcolor: #8a8a8a;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .info .jibun {\r\n");
      out.write("\tpadding-left: 26px;\r\n");
      out.write("\tbackground:\r\n");
      out.write("\t\turl(http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png)\r\n");
      out.write("\t\tno-repeat;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .info .tel {\r\n");
      out.write("\tcolor: #009900;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .markerbg {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\twidth: 36px;\r\n");
      out.write("\theight: 37px;\r\n");
      out.write("\tmargin: 10px 0 0 10px;\r\n");
      out.write("\tbackground:\r\n");
      out.write("\t\turl(http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png)\r\n");
      out.write("\t\tno-repeat;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_1 {\r\n");
      out.write("\tbackground-position: 0 -10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_2 {\r\n");
      out.write("\tbackground-position: 0 -56px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_3 {\r\n");
      out.write("\tbackground-position: 0 -102px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_4 {\r\n");
      out.write("\tbackground-position: 0 -148px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_5 {\r\n");
      out.write("\tbackground-position: 0 -194px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_6 {\r\n");
      out.write("\tbackground-position: 0 -240px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_7 {\r\n");
      out.write("\tbackground-position: 0 -286px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_8 {\r\n");
      out.write("\tbackground-position: 0 -332px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_9 {\r\n");
      out.write("\tbackground-position: 0 -378px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_10 {\r\n");
      out.write("\tbackground-position: 0 -423px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_11 {\r\n");
      out.write("\tbackground-position: 0 -470px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_12 {\r\n");
      out.write("\tbackground-position: 0 -516px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_13 {\r\n");
      out.write("\tbackground-position: 0 -562px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_14 {\r\n");
      out.write("\tbackground-position: 0 -608px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#placesList .item .marker_15 {\r\n");
      out.write("\tbackground-position: 0 -654px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pagination {\r\n");
      out.write("\tmargin: 10px auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pagination a {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pagination .on {\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcursor: default;\r\n");
      out.write("\tcolor: #777;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/includes/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<br />\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- ##### Search Area Start ##### -->\r\n");
      out.write("\t\t<form action=\"writeok\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t<div class=\"bueno-search-area section-padding-100-0 pb-70 bg-img\"\r\n");
      out.write("\t\t\t\tstyle=\"background-image: url(resources/img/core-img/pattern01.png);\">\r\n");
      out.write("\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-12 col-sm-6 col-lg-3\" id=\"selectleft\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" id=\"vegan\" name=\"ADMIN\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"NORMAL\" name=\"NORMAL\" selected>일반</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-16 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group mb-30\" id=\"select\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" id=\"recipe\" name=\"REGION\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- <option value=\"시 / 도\" name=\"categoryregion\">시 / 도</option> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"서울\" name=\"seoul\">서울특별시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"부산\" name=\"busan\">부산광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"대구\" name=\"daegu\">대구광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"인천광역시\" name=\"incheon\">인천광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"광주광역시\" name=\"gwangju\">광주광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"대전광역시\" name=\"daejeon\">대전광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"울산광역시\" name=\"ulsan\">울산광역시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"세종특별자치시\" name=\"sejong\">세종특별자치시</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"경기도\" name=\"gyunggido\">경기도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"강원도\" name=\"gangwondo\">강원도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"충청북도\" name=\"choogchungbukdo\">충청북도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"충청남도\" name=\"choogchungnamdo\">충청남도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"전라북도\" name=\"jeonlabukdo\">전라북도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"전라남도\" name=\"jeonlanamdo\">전라남도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"경상북도\" name=\"gyeongsangbukdo\">경상북도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"경상남도\" name=\"gyeongsangnamdo\">경상남도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"제주특별자치도\" name=\"jeju\">제주특별자치도</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-16 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group mb-30\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" id=\"vegan\" name=\"SCORE\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- <option value=\"categoryscore\" name=\"categoryscore\">평점\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t(☆☆☆☆☆)</option> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"5점 (★★★★★)\" name=\"five\">5점 (★★★★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"4점 (★★★★)\" name=\"four\">4점 (★★★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"3점 (★★★)\" name=\"three\">3점 (★★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"2점 (★★)\" name=\"two\">2점 (★★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"1점 (★)\" name=\"one\">1점 (★)</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- ##### Search Area End ##### -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"writeboard\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"d\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"e\" rows=\"1\" cols=\"80\" name=\"WRITEDATE\" id=\"displaynone\" readonly>작성일자</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"d\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"e\" rows=\"1\" cols=\"80\" name=\"VIEWSCOUNT\" id=\"displaynone\" readonly>조회수</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"writer\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"writer1\" rows=\"1\" cols=\"80\" name=\"EMAIL\" readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${SessionEMAIL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"Title\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"Title1\" rows=\"2\" cols=\"80\" name=\"TITLE\">[제목]\r\n");
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"Content\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"Content1\" rows=\"20\" cols=\"80\" name=\"CONTENT\">[내용]\r\n");
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"picture\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지1</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE1\" id=\"image\"\r\n");
      out.write("\t\t\t\t\t\t\t\trequired />\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지2</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE2\" id=\"image2\"\r\n");
      out.write("\t\t\t\t\t\t\t\trequired />\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview2\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지3</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE3\" id=\"image3\"\r\n");
      out.write("\t\t\t\t\t\t\t\trequired />\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview3\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<li class=\"b\">\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"image\">카페 후기이미지4</label> <br /> <input\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple=\"multiple\" type=\"file\" name=\"BBS_FILE4\" id=\"image4\"\r\n");
      out.write("\t\t\t\t\t\t\t\trequired />\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"image_preview4\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"#\" width=\"400px\" height=\"400px\" /> <br /> <a href=\"#\">Remove</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<script src=\"resources/js/jquery/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("\t\t\t<div class=\"map_wrap\">\r\n");
      out.write("\t\t\t\t<div id=\"map\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 100%; height: 100%; position: relative; overflow: hidden;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("\t\t\t\t\t<div class=\"option\">\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t키워드 : <input type=\"text\" value=\"폴리텍\" id=\"keyword\" size=\"15\">\r\n");
      out.write("\t\t\t\t\t\t\t<button onclick=\"searchPlaces(); return false;\">검색하기</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t<ul id=\"placesList\"></ul>\r\n");
      out.write("\t\t\t\t\t<div id=\"pagination\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<p class=\"mapinfo\">\r\n");
      out.write("\t\t\t\t<em>지도를 클릭해주세요!</em>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<div class=\"mapinfo\" id=\"clickLatlng\" name=\"mapinformation\"></div>\r\n");
      out.write("\t\t\t<input type=\"text\" value=\"\" name=\"LATITUDE\" id=\"mapinput\" class=\"f\"\r\n");
      out.write("\t\t\t\trequired> <input type=\"text\" value=\"\" name=\"LONGITUDE\"\r\n");
      out.write("\t\t\t\tid=\"mapinput2\" class=\"f\" required>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<script type=\"text/javascript\"\r\n");
      out.write("\t\t\t\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=2ee6c92474dfdeb528b57f280e472ffc&libraries=services\"></script>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\t// 마커를 담을 배열입니다\r\n");
      out.write("\t\t\t\tvar markers = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar mapContainer = document.getElementById('map'), // 지도를 표시할 div\r\n");
      out.write("\t\t\t\tmapOption = {\r\n");
      out.write("\t\t\t\t\tcenter : new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("\t\t\t\t\tlevel : 3\r\n");
      out.write("\t\t\t\t// 지도의 확대 레벨\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도를 생성합니다    \r\n");
      out.write("\t\t\t\tvar map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t//일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\r\n");
      out.write("\t\t\t\tvar mapTypeControl = new kakao.maps.MapTypeControl();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도에 컨트롤을 추가해야 지도위에 표시됩니다\r\n");
      out.write("\t\t\t\t// kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\r\n");
      out.write("\t\t\t\tmap.addControl(mapTypeControl,\r\n");
      out.write("\t\t\t\t\t\tkakao.maps.ControlPosition.TOPRIGHT);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\r\n");
      out.write("\t\t\t\tvar zoomControl = new kakao.maps.ZoomControl();\r\n");
      out.write("\t\t\t\tmap.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도를 클릭한 위치에 표출할 마커입니다\r\n");
      out.write("\t\t\t\tvar marker = new kakao.maps.Marker({\r\n");
      out.write("\t\t\t\t\t// 지도 중심좌표에 마커를 생성합니다 \r\n");
      out.write("\t\t\t\t\tposition : map.getCenter()\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t// 지도에 마커를 표시합니다\r\n");
      out.write("\t\t\t\tmarker.setMap(map);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도에 클릭 이벤트를 등록합니다\r\n");
      out.write("\t\t\t\t// 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다\r\n");
      out.write("\t\t\t\tkakao.maps.event.addListener(map, 'click',\r\n");
      out.write("\t\t\t\t\t\tfunction(mouseEvent) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t// 클릭한 위도, 경도 정보를 가져옵니다\r\n");
      out.write("\t\t\t\t\t\t\tvar latlng = mouseEvent.latLng;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t// 마커 위치를 클릭한 위치로 옮깁니다\r\n");
      out.write("\t\t\t\t\t\t\tmarker.setPosition(latlng);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar message = '클릭한 위치의 위도는 ' + latlng.getLat()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t+ ' 이고, ';\r\n");
      out.write("\t\t\t\t\t\t\tmessage += '경도는 ' + latlng.getLng() + ' 입니다';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar latitude = latlng.getLat();\r\n");
      out.write("\t\t\t\t\t\t\tvar longitutde = latlng.getLng();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar resultdiv = document\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.getElementById('clickLatlng');\r\n");
      out.write("\t\t\t\t\t\t\tresultdiv.innerHTML = message;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t$('input#mapinput').val(latitude);\r\n");
      out.write("\t\t\t\t\t\t\t$('input#mapinput2').val(longitutde);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 장소 검색 객체를 생성합니다\r\n");
      out.write("\t\t\t\tvar ps = new kakao.maps.services.Places();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n");
      out.write("\t\t\t\tvar infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t\t\t\t\tzIndex : 1\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 키워드로 장소를 검색합니다\r\n");
      out.write("\t\t\t\tsearchPlaces();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 키워드 검색을 요청하는 함수입니다\r\n");
      out.write("\t\t\t\tfunction searchPlaces() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar keyword = document.getElementById('keyword').value;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n");
      out.write("\t\t\t\t\t\talert('키워드를 입력해주세요!');\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n");
      out.write("\t\t\t\t\tps.keywordSearch(keyword, placesSearchCB);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n");
      out.write("\t\t\t\tfunction placesSearchCB(data, status, pagination) {\r\n");
      out.write("\t\t\t\t\tif (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 정상적으로 검색이 완료됐으면\r\n");
      out.write("\t\t\t\t\t\t// 검색 목록과 마커를 표출합니다\r\n");
      out.write("\t\t\t\t\t\tdisplayPlaces(data);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 페이지 번호를 표출합니다\r\n");
      out.write("\t\t\t\t\t\tdisplayPagination(pagination);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t} else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\talert('검색 결과가 존재하지 않습니다.');\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t} else if (status === kakao.maps.services.Status.ERROR) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\talert('검색 결과 중 오류가 발생했습니다.');\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("\t\t\t\tfunction displayPlaces(places) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar listEl = document.getElementById('placesList'), menuEl = document\r\n");
      out.write("\t\t\t\t\t\t\t.getElementById('menu_wrap'), fragment = document\r\n");
      out.write("\t\t\t\t\t\t\t.createDocumentFragment(), bounds = new kakao.maps.LatLngBounds(), listStr = '';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("\t\t\t\t\tremoveAllChildNods(listEl);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("\t\t\t\t\tremoveMarker();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < places.length; i++) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("\t\t\t\t\t\tvar placePosition = new kakao.maps.LatLng(places[i].y,\r\n");
      out.write("\t\t\t\t\t\t\t\tplaces[i].x), marker = addMarker(placePosition,\r\n");
      out.write("\t\t\t\t\t\t\t\ti), itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("\t\t\t\t\t\t// LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("\t\t\t\t\t\tbounds.extend(placePosition);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t// 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("\t\t\t\t\t\t// 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\t\t\t\t\t\t// mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("\t\t\t\t\t\t(function(marker, title) {\r\n");
      out.write("\t\t\t\t\t\t\tkakao.maps.event.addListener(marker, 'mouseover',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdisplayInfowindow(marker, title);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tkakao.maps.event.addListener(marker, 'mouseout',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tinfowindow.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\titemEl.onmouseover = function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplayInfowindow(marker, title);\r\n");
      out.write("\t\t\t\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\titemEl.onmouseout = function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tinfowindow.close();\r\n");
      out.write("\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t})(marker, places[i].place_name);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tfragment.appendChild(itemEl);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("\t\t\t\t\tlistEl.appendChild(fragment);\r\n");
      out.write("\t\t\t\t\tmenuEl.scrollTop = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("\t\t\t\t\tmap.setBounds(bounds);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("\t\t\t\tfunction getListItem(index, places) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar el = document.createElement('li'), itemStr = '<span class=\"markerbg marker_'\r\n");
      out.write("\t\t\t\t\t\t\t+ (index + 1)\r\n");
      out.write("\t\t\t\t\t\t\t+ '\"></span>'\r\n");
      out.write("\t\t\t\t\t\t\t+ '<div class=\"info\">'\r\n");
      out.write("\t\t\t\t\t\t\t+ '   <h5>' + places.place_name + '</h5>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (places.road_address_name) {\r\n");
      out.write("\t\t\t\t\t\titemStr += '    <span>' + places.road_address_name\r\n");
      out.write("\t\t\t\t\t\t\t\t+ '</span>' + '   <span class=\"jibun gray\">'\r\n");
      out.write("\t\t\t\t\t\t\t\t+ places.address_name + '</span>';\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\titemStr += '    <span>' + places.address_name\r\n");
      out.write("\t\t\t\t\t\t\t\t+ '</span>';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\titemStr += '  <span class=\"tel\">' + places.phone\r\n");
      out.write("\t\t\t\t\t\t\t+ '</span>' + '</div>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tel.innerHTML = itemStr;\r\n");
      out.write("\t\t\t\t\tel.className = 'item';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn el;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("\t\t\t\tfunction addMarker(position, idx, title) {\r\n");
      out.write("\t\t\t\t\tvar imageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n");
      out.write("\t\t\t\t\timageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n");
      out.write("\t\t\t\t\timgOptions = {\r\n");
      out.write("\t\t\t\t\t\tspriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n");
      out.write("\t\t\t\t\t\tspriteOrigin : new kakao.maps.Point(0, (idx * 46) + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t\t\t\t\t\toffset : new kakao.maps.Point(13, 37)\r\n");
      out.write("\t\t\t\t\t// 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n");
      out.write("\t\t\t\t\t}, markerImage = new kakao.maps.MarkerImage(imageSrc,\r\n");
      out.write("\t\t\t\t\t\t\timageSize, imgOptions), marker = new kakao.maps.Marker(\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\tposition : position, // 마커의 위치\r\n");
      out.write("\t\t\t\t\t\t\t\timage : markerImage\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tmarker.setMap(map); // 지도 위에 마커를 표출합니다\r\n");
      out.write("\t\t\t\t\tmarkers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn marker;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("\t\t\t\tfunction removeMarker() {\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < markers.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tmarkers[i].setMap(null);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tmarkers = [];\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("\t\t\t\tfunction displayPagination(pagination) {\r\n");
      out.write("\t\t\t\t\tvar paginationEl = document.getElementById('pagination'), fragment = document\r\n");
      out.write("\t\t\t\t\t\t\t.createDocumentFragment(), i;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("\t\t\t\t\twhile (paginationEl.hasChildNodes()) {\r\n");
      out.write("\t\t\t\t\t\tpaginationEl.removeChild(paginationEl.lastChild);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor (i = 1; i <= pagination.last; i++) {\r\n");
      out.write("\t\t\t\t\t\tvar el = document.createElement('a');\r\n");
      out.write("\t\t\t\t\t\tel.href = \"#\";\r\n");
      out.write("\t\t\t\t\t\tel.innerHTML = i;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (i === pagination.current) {\r\n");
      out.write("\t\t\t\t\t\t\tel.className = 'on';\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tel.onclick = (function(i) {\r\n");
      out.write("\t\t\t\t\t\t\t\treturn function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpagination.gotoPage(i);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t})(i);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tfragment.appendChild(el);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tpaginationEl.appendChild(fragment);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n");
      out.write("\t\t\t\t// 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\t\t\t\tfunction displayInfowindow(marker, title) {\r\n");
      out.write("\t\t\t\t\tvar content = '<div style=\"padding:5px;z-index:1;\">'\r\n");
      out.write("\t\t\t\t\t\t\t+ title + '</div>';\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinfowindow.setContent(content);\r\n");
      out.write("\t\t\t\t\tinfowindow.open(map, marker);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t// 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("\t\t\t\tfunction removeAllChildNods(el) {\r\n");
      out.write("\t\t\t\t\twhile (el.hasChildNodes()) {\r\n");
      out.write("\t\t\t\t\t\tel.removeChild(el.lastChild);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<br /> <br />\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<!-- <div class=\"col-12 col-sm-6 col-lg-3\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group mb-30\"> -->\r\n");
      out.write("\t\t\t\t<button class=\"btn bueno-btn w-100\" onclick=\"writebutton()\">글쓰기</button>\r\n");
      out.write("\t\t\t\t<!-- </div>\r\n");
      out.write("\t\t\t\t\t</div> -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<br />\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/includes/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- ##### All Javascript Script ##### -->\r\n");
      out.write("\t<!-- jQuery-2.2.4 js -->\r\n");
      out.write("\t<script src=\"resources/js/jquery/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image2').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image2').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview2 img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview2').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview2 a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image2')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image2').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image3').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image3').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview3 img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview3').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview3 a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image3')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image3').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\tonchange event handler for the file input field.\r\n");
      out.write("\t\tIt emplements very basic validation using the file extension.\r\n");
      out.write("\t\tIf the filename passes validation it will show the image using it's blob URL  \r\n");
      out.write("\t\tand will hide the input field and show a delete button to allow the user to remove the image\r\n");
      out.write("\t\t */\r\n");
      out.write("\r\n");
      out.write("\t\t$('#image4').on('change', function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\text = $(this).val().split('.').pop().toLowerCase(); //확장자\r\n");
      out.write("\r\n");
      out.write("\t\t\t//배열에 추출한 확장자가 존재하는지 체크\r\n");
      out.write("\t\t\tif ($.inArray(ext, [ 'gif', 'png', 'jpg', 'jpeg' ]) == -1) {\r\n");
      out.write("\t\t\t\tresetFormElement($(this)); //폼 초기화\r\n");
      out.write("\t\t\t\twindow.alert('이미지 파일이 아닙니다! (gif, png, jpg, jpeg 만 업로드 가능)');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tfile = $('#image4').prop(\"files\")[0];\r\n");
      out.write("\t\t\t\tblobURL = window.URL.createObjectURL(file);\r\n");
      out.write("\t\t\t\t$('#image_preview4 img').attr('src', blobURL).css({\r\n");
      out.write("\t\t\t\t\t'width' : '300px',\r\n");
      out.write("\t\t\t\t\t'maxWidth' : 'none',\r\n");
      out.write("\t\t\t\t\t'height' : '300px'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$('#image_preview4').slideDown(); //업로드한 이미지 미리보기 \r\n");
      out.write("\t\t\t\t/* $(this).slideUp(); //파일 양식 감춤 */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\tonclick event handler for the delete button.\r\n");
      out.write("\t\tIt removes the image, clears and unhides the file input field.\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$('#image_preview4 a').bind('click', function() {\r\n");
      out.write("\t\t\tresetFormElement($('#image4')); //전달한 양식 초기화\r\n");
      out.write("\t\t\t$('#image4').slideDown(); //파일 양식 보여줌\r\n");
      out.write("\t\t\t$(this).parent().slideUp(); //미리 보기 영역 감춤\r\n");
      out.write("\t\t\treturn false; //기본 이벤트 막음\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t/** \r\n");
      out.write("\t\t * 폼요소 초기화 \r\n");
      out.write("\t\t * Reset form element\r\n");
      out.write("\t\t * \r\n");
      out.write("\t\t * @param e jQuery object\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction resetFormElement(e) {\r\n");
      out.write("\t\t\te.wrap('<form>').closest('form').get(0).reset();\r\n");
      out.write("\t\t\t//리셋하려는 폼양식 요소를 폼(<form>) 으로 감싸고 (wrap()) , \r\n");
      out.write("\t\t\t//요소를 감싸고 있는 가장 가까운 폼( closest('form')) 에서 Dom요소를 반환받고 ( get(0) ),\r\n");
      out.write("\t\t\t//DOM에서 제공하는 초기화 메서드 reset()을 호출\r\n");
      out.write("\t\t\te.unwrap(); //감싼 <form> 태그를 제거\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction writebutton() {\r\n");
      out.write("\t\t\tif ($('input#mapinput').val() == \"\"\r\n");
      out.write("\t\t\t\t\t|| $('input#mapinput').val() == null\r\n");
      out.write("\t\t\t\t\t&& $('input#mapinput2').val() == \"\"\r\n");
      out.write("\t\t\t\t\t|| $('input#mapinput2').val() == null) {\r\n");
      out.write("\t\t\t\talert(\"지도에 카페위치를 클릭해주셔야 글쓰기가 가능합니다.\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$('textarea#displaynone').css({\r\n");
      out.write("\t\t\t'display':'none'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('div#selectleft').css({\r\n");
      out.write("\t\t\t'margin-left':'12%'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Popper js -->\r\n");
      out.write("\t<script src=\"resources/js/bootstrap/popper.min.js\"></script>\r\n");
      out.write("\t<!-- Bootstrap js -->\r\n");
      out.write("\t<script src=\"resources/js/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("\t<!-- All Plugins js -->\r\n");
      out.write("\t<script src=\"resources/js/plugins/plugins.js\"></script>\r\n");
      out.write("\t<!-- Active js -->\r\n");
      out.write("\t<script src=\"resources/js/active.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/write.jsp(330,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${SessionEMAIL=='gkwlstn2001@naver.com'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ADMINISTRATION\" name=\"ADMINISTRATION\">관리자</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
